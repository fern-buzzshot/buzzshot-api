openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v2/accounts:
    get:
      operationId: listAccounts
      x-request-name: ListAccountsRequest
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /api/v2/accounts/{id}:
    get:
      operationId: retrieveAccount
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this account.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
  /api/v2/games:
    get:
      operationId: listGames
      x-request-name: ListGamesRequest
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: complete
        required: false
        in: query
        description: complete
        schema:
          type: string
      - name: date
        required: false
        in: query
        description: Date
        schema:
          type: string
      - name: before
        required: false
        in: query
        description: Before
        schema:
          type: string
      - name: after
        required: false
        in: query
        description: After
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamesResponse'
          description: ''
  /api/v2/games/{id}:
    get:
      operationId: retrieveGame
      x-request-name: RetrieveGameRequest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group.
        schema:
          type: string
      - name: complete
        required: false
        in: query
        description: complete
        schema:
          type: string
      - name: date
        required: false
        in: query
        description: Date
        schema:
          type: string
      - name: before
        required: false
        in: query
        description: Before
        schema:
          type: string
      - name: after
        required: false
        in: query
        description: After
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: ''
  /api/v2/groups:
    get:
      operationId: listGroups
      x-request-name: ListGroupsRequest
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: is_event
        required: false
        in: query
        description: is_event
        schema:
          type: string
      - name: complete
        required: false
        in: query
        description: complete
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsResponse'
          description: ''
  /api/v2/groups/{id}:
    get:
      operationId: retrieveGroup
      x-request-name: RetrieveGroupRequest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this group.
        schema:
          type: string
      - name: is_event
        required: false
        in: query
        description: is_event
        schema:
          type: string
      - name: complete
        required: false
        in: query
        description: complete
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v2/players:
    get:
      operationId: listPlayers
      x-request-name: ListPlayersRequest
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayersResponse'
          description: ''
  /api/v2/players/{id}:
    get:
      operationId: retrievePlayer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this player.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
  /api/v2/rooms:
    get:
      operationId: listLocations
      x-request-name: ListLocationsRequest
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationsResponse'
          description: ''
  /api/v2/rooms/{id}:
    get:
      operationId: retrieveLocation
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this location.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
  /api/v2/photos:
    get:
      operationId: listPhotos
      x-request-name: ListPhotosRequest
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhotosResponse'
          description: ''
  /api/v2/photos/{photo_id}:
    get:
      operationId: retrievePhoto
      description: ''
      parameters:
      - name: photo_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Photo'
          description: ''
components:
  schemas:
    Account: 
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Room'
    Room:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        hidden:
          type: boolean
      required:
      - name
    Game:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        added_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 255
        date:
          type: string
          format: date
        time:
          type: string
        start_at:
          type: string
          format: date-time
          readOnly: true
        group:
          type: string
          readOnly: true
        room:
          type: string
          readOnly: true
        photos:
          type: array
          items:
            $ref: '#/components/schemas/PhotosItem'
          readOnly: true
        extra_fields:
          type: array
          items:
            $ref: '#/components/schemas/ExtraFieldsItem'
        complete:
          $ref: '#/components/schemas/GameComplete'
      required:
      - date
      - time
      - extra_fields
      - complete
    PhotosItem: 
      type: object
      properties:
        added_at:
          type: string
          format: date-time
          readOnly: true
        photo:
          type: string
        processed_image:
          type: string
          format: binary
          readOnly: true
        ready:
          type: string
          readOnly: true
      required:
      - photo
    ExtraFieldsItem:
      type: object
      properties:
        key:
          type: string
        label:
          type: string
          readOnly: true
        value:
          type: object
          nullable: true
        present:
          type: boolean
      required:
      - key
      - value
      - present
    PlayersResponse:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Player'
    PhotosResponse:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Photo'
    LocationsResponse:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Room'
    GroupsResponse:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    GamesResponse:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Game'
    GameComplete: 
      type: object
      properties:
        completed_at:
          type: string
          format: date-time
        did_win:
          type: boolean
          nullable: true
        hints:
          type: integer
          nullable: true
        score:
          type: integer
          nullable: true
        completion_time:
          type: integer
          nullable: true
      required:
      - completed_at
      - did_win
      - hints
      - score
      - completion_time
    Group:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        added_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_event:
          type: boolean
        name:
          type: string
          maxLength: 255
        date:
          type: string
          format: date
        time:
          type: string
        start_at:
          type: string
          format: date-time
          readOnly: true
        games:
          type: array
          items:
            $ref: '#/components/schemas/Games'
          readOnly: true
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        photos:
          type: array
          items:
            $ref: '#/components/schemas/PhotosItem'
          readOnly: true
      required:
      - date
      - time
      - players
    Player: 
      type: object
      properties:
        added_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        player:
          type: string
          readOnly: true
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
        phone:
          type: string
        extra_fields:
          type: array
          items:
            $ref: '#/components/schemas/ExtraFieldsItem'
        signature:
          type: string
          readOnly: true
      required:
      - email
      - phone
      - extra_fields
    Games: 
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        added_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 255
        date:
          type: string
          format: date
        time:
          type: string
        start_at:
          type: string
          format: date-time
          readOnly: true
        room:
          type: string
          readOnly: true
        extra_fields:
          type: array
          items:
            $ref: '#/components/schemas/ExtraFieldsItem'
        complete:
          $ref: '#/components/schemas/GameComplete'
      required:
      - date
      - time
      - extra_fields
      - complete
    Photo:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        added_at:
          type: string
          format: date-time
          readOnly: true
        original_image:
          type: string
          format: binary
        processed:
          type: array
          items:
            $ref: '#/components/schemas/ProcessedProperty'
      required:
      - original_image
      - processed
    ProcessedProperty:
      type: object
      properties:
        added_at:
          type: string
          format: date-time
          readOnly: true
        game:
          type: string
          readOnly: true
        group:
          type: string
          readOnly: true
        photo:
          type: string
        processed_image:
          type: string
          format: binary
          readOnly: true
        ready:
          type: string
          readOnly: true
      required:
      - photo 
